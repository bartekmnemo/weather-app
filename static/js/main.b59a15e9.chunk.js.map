{"version":3,"sources":["components/Navigation.js","img/sunriseIcon.svg","img/sunsetIcon.svg","components/Result.js","components/LoadingScreen.js","components/MainPanel.js","components/Footer.js","components/App.js","reportWebVitals.js","index.js"],"names":["Navigation","className","target","rel","href","title","Result","props","deg","all","iconImage","date","timezone","visibility","city","sunrise","sunset","temp","feels_like","temp_min","temp_max","humidity","pressure","wind_speed","wind_deg","weather_main","weather_description","error","errorMessage","content","sunriseTime","Date","toLocaleTimeString","hour","minute","sunsetTime","windKM","Math","round","windDirection","transform","src","sunriseIcon","alt","sunsetIcon","floor","style","toFixed","message","LoadingScreen","Form","isloading","value","countryID","country","removeWordsAfterSpace","string","space","newText","charAt","toUpperCase","slice","console","log","deleteSpace","indexOf","capitalizeFirstLetter","type","onChange","change","placeholder","id","name","onClick","click","Footer","ApiKey","App","state","firstLoad","errorId","componentDidMount","handleCityClick","handleValueChange","e","setState","setToloading","undefined","preventDefault","length","API","fetch","then","response","status","json","Error","data","time","weatherIndex","weather","prevState","icon","sys","main","wind","speed","description","catch","err","this","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uVAqBeA,EAlBI,WACf,OACI,8BACI,sBAAKC,UAAU,aAAf,UACI,qBAAKA,UAAU,OAAf,SACI,+CAEJ,qBAAKA,UAAU,OAAf,SACI,+BACI,6BAAI,mBAAGC,OAAO,SAASC,IAAI,oBAAoBC,KAAK,sCAAsCC,MAAM,yBAAyBJ,UAAU,aAA/H,wBACJ,6BAAI,mBAAGC,OAAO,SAASC,IAAI,oBAAoBC,KAAK,6CAA6CC,MAAM,qBAAqBJ,UAAU,aAAlI,+BCbb,G,YAAA,IAA0B,yCCA1B,MAA0B,uCCmF1BK,EA9EA,SAAAC,GACX,IAG8BC,EAH9B,EAAkND,EAAME,IAAhNC,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,KAAMC,EAAzB,EAAyBA,SAAUC,EAAnC,EAAmCA,WAAYC,EAA/C,EAA+CA,KAAMC,EAArD,EAAqDA,QAASC,EAA9D,EAA8DA,OAAQC,EAAtE,EAAsEA,KAAMC,EAA5E,EAA4EA,WAAYC,EAAxF,EAAwFA,SAAUC,EAAlG,EAAkGA,SAAUC,EAA5G,EAA4GA,SAAUC,EAAtH,EAAsHA,SAAUC,EAAhI,EAAgIA,WAAYC,EAA5I,EAA4IA,SAAUC,EAAtJ,EAAsJA,aAAcC,EAApK,EAAoKA,oBAAqBC,EAAzL,EAAyLA,MAAQC,EAAjM,EAAiMA,aAC7LC,EAAU,KAad,IAAIF,GAASb,EAAK,CACd,IAAMgB,EAAc,IAAIC,KAAoC,KAA9BhB,EAAUH,EAAW,OAAeoB,mBAAmB,GAAI,CAACC,KAAM,UAAWC,OAAO,YAC5GC,EAAa,IAAIJ,KAAkC,KAA5Bf,EAASJ,EAAW,OAAcoB,mBAAmB,GAAI,CAACC,KAAM,UAAWC,OAAO,YACzGE,EAASC,KAAKC,MAAOf,EAAa,IAAQ,MAC1CgB,EAAgB,CAClBC,UAAU,UAAD,OAAYhB,EAAS,GAArB,SAGbK,EACA,sBAAK5B,UAAU,SAAf,UACI,qBAAKA,UAAU,aAAf,SACI,8BAAG,mDAAH,MAAgCU,EAAhC,MAAwC,qBAAK8B,IAAKC,EAAaC,IAAI,YAAnE,IAAgFb,EAAhF,MAA+F,qBAAKW,IAAKG,EAAYD,IAAI,YAAzH,IAAsIR,OAI1I,sBAAKlC,UAAU,aAAf,UACI,sBAAKA,UAAU,WAAf,UACI,sBAAKA,UAAU,YAAf,UACK,qBAAKwC,IAAK/B,EAAWiC,IAAI,iBAAiB,+BAAKN,KAAKQ,MAAM5B,GAAhB,cAE/C,sBAAKhB,UAAU,iBAAf,UACI,6BAAKwB,IACL,sBAAKxB,UAAU,iBAAf,UACI,sBAAKA,UAAU,eAAf,UACI,2CACA,8BAAIoC,KAAKQ,MAAM3B,GAAf,cAEJ,sBAAKjB,UAAU,eAAf,UACI,yCACA,8BAAIqB,EAAJ,aAEJ,sBAAKrB,UAAU,eAAf,UACI,2CACA,8BAAI,mBAAGA,UAAU,wBAAyB6C,MAAOP,IAAjD,KA5CE/B,EA4C0FgB,EA3CjHhB,IAAQ,OAASA,GAAO,KAAa,IAChCA,EAAM,MAAQA,EAAM,KAAa,KACjCA,EAAM,MAAQA,EAAM,MAAc,IAClCA,EAAM,OAASA,EAAM,MAAc,KACnCA,EAAM,OAASA,EAAM,MAAc,IACnCA,EAAM,OAASA,EAAM,MAAc,KACnCA,EAAM,OAASA,EAAM,MAAc,IACnCA,EAAM,OAASA,EAAM,MAAc,UAAtC,GAoCmB,MAA0G4B,EAA1G,uBAQhB,sBAAKnC,UAAU,YAAf,UACE,sBAAKA,UAAU,eAAf,cAAgCyB,KAChC,sBAAKzB,UAAU,eAAf,uBAAyCoB,EAAzC,OACA,sBAAKpB,UAAU,eAAf,0BAA4CY,EAAa,KAAMkC,QAAQ,GAAvE,QAEE,sBAAK9C,UAAU,eAAf,uBAAyCoC,KAAKQ,MAAM1B,GAApD,WACA,sBAAKlB,UAAU,eAAf,uBAAyCoC,KAAKQ,MAAMzB,GAApD,oBAQhB,OACI,mCACMO,EAAQ,qBAAK1B,UAAU,UAAf,SAA0B2B,EAAaoB,UAAiBnB,KC9D/DoB,G,MAZO,WAClB,OACI,qBAAKhD,UAAU,UAAf,SACI,sBAAKA,UAAU,UAAf,UACI,qBAAKA,UAAU,QACf,qBAAKA,UAAU,UACf,mBAAGA,UAAU,cAAb,+BC4EDiD,EAhFF,SAAA3C,GACT,MAA6DA,EAAME,IAA5D0C,EAAP,EAAOA,UAAWC,EAAlB,EAAkBA,MAAOC,EAAzB,EAAyBA,UAAWC,EAApC,EAAoCA,QAASxC,EAA7C,EAA6CA,KAAMa,EAAnD,EAAmDA,MAU7C4B,EAAwB,SAACC,EAAQC,GACnC,IAAIC,EAAUF,EAAOG,OAAO,GAAGC,cAAgBJ,EAAOK,MAAM,GAExD,OADAC,QAAQC,IAAIL,GACLA,EAAQG,MAAM,EAAGJ,IAEhC,OACI,sBAAKxD,UAAU,YAAf,UACI,iCACM0B,EAAQ,KAAO,sBAAK1B,UAAU,cAAf,UAA6B,iCAjB5B,SAACuD,GAC3B,IAAIQ,EAAcR,EAAOS,QAAQ,KACjC,OAAGD,EAAc,EAEPT,EAAsBC,EAAQQ,GAEjCR,EAAOG,OAAO,GAAGC,cAAgBJ,EAAOK,MAAM,GAWQK,CAAsBpD,GAAM,8BAAMwC,OAAtE,OAEjB,uBAAOa,KAAK,OAAOf,MAAOA,EAAOgB,SAAU7D,EAAM8D,OAAQC,YAAY,cAErE,yBAAQC,GAAG,YAAYC,KAAK,UAAUpB,MAAOC,EAAWe,SAAU7D,EAAM8D,OAAxE,UACI,wBAAQjB,MAAM,GAAd,uBACA,wBAAQA,MAAM,KAAd,uBACA,wBAAQA,MAAM,KAAd,sBACA,wBAAQA,MAAM,QAAd,oBACA,wBAAQA,MAAM,KAAd,2BACA,wBAAQA,MAAM,KAAd,yBACA,wBAAQA,MAAM,KAAd,uBACA,wBAAQA,MAAM,KAAd,qBACA,wBAAQA,MAAM,KAAd,mBACA,wBAAQA,MAAM,KAAd,oBACA,wBAAQA,MAAM,KAAd,oBACA,wBAAQA,MAAM,KAAd,mBACA,wBAAQA,MAAM,KAAd,qBACA,wBAAQA,MAAM,KAAd,oBACA,wBAAQA,MAAM,KAAd,6BACA,wBAAQA,MAAM,KAAd,qBACA,wBAAQA,MAAM,KAAd,oBACA,wBAAQA,MAAM,KAAd,sBACA,wBAAQA,MAAM,KAAd,oBACA,wBAAQA,MAAM,KAAd,mBACA,wBAAQA,MAAM,KAAd,sBACA,wBAAQA,MAAM,KAAd,uBACA,wBAAQA,MAAM,KAAd,wBACA,wBAAQA,MAAM,KAAd,qBACA,wBAAQA,MAAM,KAAd,sBACA,wBAAQA,MAAM,KAAd,oBACA,wBAAQA,MAAM,KAAd,qBACA,wBAAQA,MAAM,KAAd,wBACA,wBAAQA,MAAM,KAAd,wBACA,wBAAQA,MAAM,KAAd,uBACA,wBAAQA,MAAM,KAAd,mBACA,wBAAQA,MAAM,KAAd,oBACA,wBAAQA,MAAM,KAAd,wBACA,wBAAQA,MAAM,QAAd,iCACA,wBAAQA,MAAM,KAAd,sBACA,wBAAQA,MAAM,KAAd,qBACA,wBAAQA,MAAM,QAAd,qBACA,wBAAQA,MAAM,KAAd,oBACA,wBAAQA,MAAM,KAAd,uBACA,wBAAQA,MAAM,QAAd,qBACA,wBAAQA,MAAM,KAAd,qBACA,wBAAQA,MAAM,KAAd,kBACA,wBAAQA,MAAM,KAAd,qBACA,wBAAQA,MAAM,QAAd,uBACA,wBAAQA,MAAM,KAAd,wBACA,wBAAQA,MAAM,QAAd,gCACA,wBAAQA,MAAM,QAAd,iCACA,wBAAQA,MAAM,KAAd,qBAEJ,wBAAQqB,QAASlE,EAAMmE,MAAvB,SAA8B,mBAAGzE,UAAU,uBAE1CkD,EAAY,cAAC,EAAD,IAAmB,cAAC,EAAD,CAAQ1C,IAAKF,EAAME,UCrEpDkE,G,MARA,WACX,OACI,iCACI,iDAAmB,mBAAGzE,OAAO,SAASC,IAAI,qBAAqBC,KAAK,0BAA2BC,MAAM,UAAlF,qBAAnB,SAAgI,mBAAGH,OAAO,SAASC,IAAI,qBAAqBC,KAAK,4BAA4BC,MAAM,WAAnF,0BAAhI,iBAA4P,mBAAGH,OAAO,SAASC,IAAI,qBAAqBC,KAAK,8BAA8BC,MAAM,oBAArF,4BAA5P,gBAAoY,mBAAGH,OAAO,SAASC,IAAI,oBAAoBC,KAAK,6CAA6CC,MAAM,qBAAnG,yCCC1YuE,G,MAAS,oCAgJAC,E,4MA7IbC,MAAQ,CACN3B,WAAW,EACX4B,WAAW,EACX3B,MAAO,GACPC,UAAW,GACX3C,UAAW,GACXC,KAAM,GACNC,SAAU,GACV0C,QAAS,GACTxC,KAAM,GACNC,QAAS,GACTC,OAAQ,GACRC,KAAM,GACNC,WAAY,GACZC,SAAU,GACVC,SAAU,GACVC,SAAU,GACVC,SAAU,GACVC,WAAY,GACZC,SAAU,GACVC,aAAc,GACdC,oBAAqB,GACrBb,WAAY,GACZc,OAAO,EACPqD,QAAS,GACTpD,aAAc,I,EAEfqD,kBAAoB,WACnB,EAAKC,mB,EAGPC,kBAAoB,SAAAC,GACG,SAAlBA,EAAElF,OAAOiE,KAEV,EAAKkB,SAAS,CACZjC,MAAOgC,EAAElF,OAAOkD,QAES,eAAlBgC,EAAElF,OAAOiE,MAClB,EAAKkB,SAAS,CACZhC,UAAW+B,EAAElF,OAAOkD,S,EAO1BkC,aAAe,WACb,EAAKD,SAAS,CACZlC,WAAW,EACXG,QAAS,GACTxC,KAAM,M,EAIVoE,gBAAkB,SAAAE,GAChB,IAAItE,EAAO,EAAKgE,MAAM1B,MAQtB,GANG,EAAK0B,MAAMC,YAAWjE,EAAK,cAErByE,IAANH,GAEDA,EAAEI,mBAED1E,EAAK2E,QAAU,GAAlB,CACC,EAAKH,eAMN,IAAMI,EAAG,4DAAwD5E,EAAxD,YAAgE,EAAKgE,MAAMzB,UAA3E,kBAA8FuB,EAA9F,iBACTe,MAAMD,GACLE,MAAM,SAAAC,GACL,GAAuB,MAApBA,EAASC,OACV,OAAOD,EAASE,OACZ,GAAwB,MAApBF,EAASC,OAIjB,MAHA,EAAKT,SAAS,CACZL,QAAS,IAELgB,MAAM,uBACR,GAAwB,MAApBH,EAASC,OAIjB,MAHA,EAAKT,SAAS,CACZL,QAAS,IAELgB,MAAM,iFAKfJ,MAAM,SAAAK,GACLnC,QAAQC,IAAIkC,GACZ,IAAMC,GAAO,IAAInE,MAAOC,qBAClBmE,EAAeF,EAAKG,QAAQX,OAASQ,EAAKG,QAAQX,OACxD,EAAKJ,UAAU,SAAAgB,GAAS,MAAK,CAC3BlD,WAAW,EACX4B,WAAW,EACX3B,MAAO,GACP1C,UAAU,qCAAD,OAAuCuF,EAAKG,QAAQD,GAAcG,KAAlE,WACT3F,KAAMuF,EACNtF,SAAUqF,EAAKrF,SACf0C,QAAS2C,EAAKM,IAAIjD,QAClBxC,KAAMmF,EAAKzB,KACXzD,QAASkF,EAAKM,IAAIxF,QAClBC,OAAQiF,EAAKM,IAAIvF,OACjBC,KAAMgF,EAAKO,KAAKvF,KAChBC,WAAY+E,EAAKO,KAAKtF,WACtBC,SAAU8E,EAAKO,KAAKrF,SACpBC,SAAU6E,EAAKO,KAAKpF,SACpBC,SAAU4E,EAAKO,KAAKnF,SACpBC,SAAU2E,EAAKO,KAAKlF,SACpBC,WAAY0E,EAAKQ,KAAKC,MACtBlF,SAAUyE,EAAKQ,KAAKjG,IACpBiB,aAAcwE,EAAKG,QAAQD,GAAcK,KACzC9E,oBAAqBuE,EAAKG,QAAQD,GAAcQ,YAChD9F,WAAYoF,EAAKpF,WACjBc,OAAO,SAGViF,OAAO,SAAAC,GACN/C,QAAQC,IAAI8C,EAAI7D,SAChB,EAAKqC,SAAS,CACZ1D,OAAO,EACPC,aAAciF,EACd1D,WAAW,S,4CAKjB,WACE,OACE,sBAAKlD,UAAU,MAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,CAAWQ,IAAKqG,KAAKhC,MAAOT,OAAQyC,KAAK3B,kBAAmBT,MAAOoC,KAAK5B,kBACxE,cAAC,EAAD,W,GAtIU6B,aCGHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBtB,MAAK,YAAkD,IAA/CuB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.b59a15e9.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Navigation.css'\r\n\r\nconst Navigation = () => {\r\n    return ( \r\n        <nav>\r\n            <div className=\"navWrapper\">\r\n                <div className=\"logo\">\r\n                    <h1>WeatherLand</h1>\r\n                </div>\r\n                <div className=\"menu\">\r\n                    <ul>\r\n                        <li><a target=\"_blank\" rel=\"author noreferrer\" href=\"https://www.instagram.com/be.st33v/\" title=\"instagram.com/be.st33v\" className=\"menuOption\">About me</a></li>\r\n                        <li><a target=\"_blank\" rel=\"author noreferrer\" href=\"https://github.com/bartekmnemo/weather-app\" title=\"https://github.com\" className=\"menuOption\">Info</a></li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n     );\r\n}\r\n \r\nexport default Navigation;","export default __webpack_public_path__ + \"static/media/sunriseIcon.a2402508.svg\";","export default __webpack_public_path__ + \"static/media/sunsetIcon.951cf7b1.svg\";","import React from 'react';\r\nimport './Result.css';\r\nimport sunriseIcon from '../img/sunriseIcon.svg';\r\nimport sunsetIcon from '../img/sunsetIcon.svg';\r\n\r\nconst Result = props => {\r\n    const { iconImage, date, timezone, visibility, city, sunrise, sunset ,temp ,feels_like ,temp_min ,temp_max ,humidity ,pressure ,wind_speed, wind_deg ,weather_main ,weather_description ,error,  errorMessage } = props.all\r\n    let content = null\r\n\r\n    const directionsOfTheWorld = (deg) => {\r\n        if(deg >= -337.5 && deg <= 22.5) return 'N'\r\n        else if(deg > 22.5 && deg < 67.5) return 'NE'\r\n        else if(deg > 67.5 && deg < 112.5) return 'E'\r\n        else if(deg > 112.5 && deg < 157.5) return 'SE'\r\n        else if(deg > 157.5 && deg < 202.5) return 'S'\r\n        else if(deg > 202.5 && deg < 247.5) return 'SW'\r\n        else if(deg > 247.5 && deg < 292.5) return 'W'\r\n        else if(deg > 292.5 && deg < 337.5) return 'NW'\r\n    }\r\n\r\n    if(!error && city){\r\n        const sunriseTime = new Date((sunrise + timezone - 7200)  * 1000).toLocaleTimeString([], {hour: '2-digit', minute:'2-digit'});;\r\n        const sunsetTime = new Date((sunset + timezone - 7200) * 1000).toLocaleTimeString([], {hour: '2-digit', minute:'2-digit'});;\r\n        const windKM = Math.round((wind_speed / 1000) * 3600)\r\n        const windDirection = {\r\n            transform: `rotate(${wind_deg-45}deg)`, // -45deg because of image direction\r\n        };\r\n\r\n        content = (\r\n        <div className=\"result\">\r\n            <div className=\"trashInfos\">\r\n                <p><b>Weather right now </b> - {date} | <img src={sunriseIcon} alt=\"sunrise\"/> {sunriseTime} | <img src={sunsetIcon} alt=\"sunrise\"/> {sunsetTime}</p>\r\n                \r\n                \r\n            </div>\r\n            <div className=\"detailInfo\">\r\n                <div className=\"leftInfo\">\r\n                    <div className=\"tempPanel\">\r\n                        {<img src={iconImage} alt=\"weather_icon\"/>}<h4>{Math.floor(temp)}&#176;C</h4>\r\n                    </div>\r\n                    <div className=\"weatherWrapper\">\r\n                        <h3>{weather_main}</h3>\r\n                        <div className=\"weatherDetails\">\r\n                            <div className=\"weatherParam\">\r\n                                <p>Feels Like</p>\r\n                                <p>{Math.floor(feels_like)}&#176;C</p>\r\n                            </div>\r\n                            <div className=\"weatherParam\">\r\n                                <p>Pressure</p>\r\n                                <p>{pressure} hPa</p>\r\n                            </div>\r\n                            <div className=\"weatherParam\">\r\n                                <p>Wind speed</p>\r\n                                <p>{<i className=\"fas fa-location-arrow\"  style={windDirection}></i>} {directionsOfTheWorld(wind_deg)} | {windKM} Km/h</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                   \r\n                   \r\n                <div className=\"rightInfo\">\r\n                  <div className=\"weatherParam\"> {weather_description}</div>\r\n                  <div className=\"weatherParam\">Humidity: {humidity}%</div>\r\n                  <div className=\"weatherParam\">Visibility: {(visibility / 1000).toFixed(1)}km</div>\r\n                  \r\n                    <div className=\"weatherParam\">Min Temp: {Math.floor(temp_min)}&#176;C</div>\r\n                    <div className=\"weatherParam\">Max Temp: {Math.floor(temp_max)}&#176;C</div>\r\n                   \r\n                </div>\r\n            </div>\r\n            \r\n        </div>\r\n        )\r\n    }\r\n    return ( \r\n        <>\r\n             {error ? <div className=\"wrapper\">{errorMessage.message}</div> : content}\r\n        </>\r\n     );\r\n}\r\n\r\n \r\nexport default Result;","import React from 'react';\r\nimport './LoadingScreen.css'\r\n\r\nconst LoadingScreen = () => {\r\n    return ( \r\n        <div className=\"wrapper\">\r\n            <div className=\"content\"> \r\n                <div className=\"dot\"></div>\r\n                <div className=\"dot_s\"></div>\r\n                <p className=\"loadingText\">Loading...</p>\r\n            </div>\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default LoadingScreen;","import React from 'react';\r\nimport './MainPanel.css'\r\nimport Result from './Result'\r\nimport LoadingScreen from './LoadingScreen';\r\n\r\nconst Form = props => {\r\n    const {isloading, value, countryID, country, city, error } = props.all\r\n    const capitalizeFirstLetter = (string) => {\r\n        let deleteSpace = string.indexOf(' ')\r\n        if(deleteSpace > 1)\r\n        {\r\n           return removeWordsAfterSpace(string, deleteSpace)\r\n        }\r\n        return string.charAt(0).toUpperCase() + string.slice(1);\r\n      }\r\n\r\n    const removeWordsAfterSpace = (string, space) => {\r\n        let newText = string.charAt(0).toUpperCase() + string.slice(1);\r\n            console.log(newText)\r\n            return newText.slice(0, space);\r\n    }\r\n    return ( \r\n        <div className=\"mainPanel\">\r\n            <form>\r\n                 {error ? null : <div className=\"sideCountry\"><span>{capitalizeFirstLetter(city)}<sup>{country}</sup></span> </div>}   \r\n                \r\n                <input type=\"text\" value={value} onChange={props.change} placeholder=\"search...\" />\r\n                {/* For more country codes visit => https://www.andiamo.co.uk/resources/iso-language-codes/ */}\r\n                <select id=\"countries\" name=\"country\" value={countryID} onChange={props.change}>\r\n                    <option value=\"\">Worldwide</option>\r\n                    <option value=\"af\">Afrikaans</option>\r\n                    <option value=\"al\">Albanian</option>\r\n                    <option value=\"ar ae\">Arabic</option>\r\n                    <option value=\"US\">United States</option>\r\n                    <option value=\"az\">Azerbaijani</option>\r\n                    <option value=\"bg\">Bulgarian</option>\r\n                    <option value=\"ca\">Catalan</option>\r\n                    <option value=\"cz\">Czech</option>\r\n                    <option value=\"da\">Danish</option>\r\n                    <option value=\"de\">German</option>\r\n                    <option value=\"el\">Greek</option>\r\n                    <option value=\"en\">English</option>\r\n                    <option value=\"eu\">Basque</option>\r\n                    <option value=\"fa\">Persian (Farsi)</option>\r\n                    <option value=\"fi\">Finnish</option>\r\n                    <option value=\"fr\">French</option>\r\n                    <option value=\"gl\">Galician</option>\r\n                    <option value=\"he\">Hebrew</option>\r\n                    <option value=\"hi\">Hindi</option>\r\n                    <option value=\"hr\">Croatian</option>\r\n                    <option value=\"hu\">Hungarian</option>\r\n                    <option value=\"id\">Indonesian</option>\r\n                    <option value=\"it\">Italian</option>\r\n                    <option value=\"ja\">Japanese</option>\r\n                    <option value=\"kr\">Korean</option>\r\n                    <option value=\"la\">Latvian</option>\r\n                    <option value=\"lt\">Lithuanian</option>\r\n                    <option value=\"mk\">Macedonian</option>\r\n                    <option value=\"no\">Norwegian</option>\r\n                    <option value=\"nl\">Dutch</option>\r\n                    <option value=\"pl\">Polish</option>\r\n                    <option value=\"pt\">Portuguese</option>\r\n                    <option value=\"pt_br\">Português Brasil</option>\r\n                    <option value=\"ro\">Romanian</option>\r\n                    <option value=\"ru\">Russian</option>\r\n                    <option value=\"sv se\">Swedish</option>\r\n                    <option value=\"sk\">Slovak</option>\r\n                    <option value=\"sl\">Slovenian</option>\r\n                    <option value=\"sp es\">Spanish</option>\r\n                    <option value=\"sr\">Serbian</option>\r\n                    <option value=\"th\">Thai</option>\r\n                    <option value=\"tr\">Turkish</option>\r\n                    <option value=\"ua uk\">Ukrainian</option>\r\n                    <option value=\"vi\">Vietnamese</option>\r\n                    <option value=\"zh_cn\">Chinese Simplified</option>\r\n                    <option value=\"zh_tw\">Chinese Traditional</option>\r\n                    <option value=\"zu\">Zulu</option>\r\n                </select> \r\n                <button onClick={props.click}><i className=\"fas fa-search\"></i></button>\r\n                </form>\r\n                {isloading ? <LoadingScreen/> : <Result all={props.all}/>}\r\n            </div>\r\n     );\r\n}\r\n \r\nexport default Form;","import React from 'react';\r\nimport './Footer.css';\r\n\r\nconst Footer = () => {\r\n    return ( \r\n        <footer>\r\n            <div>Icons made by <a target=\"_blank\" rel=\"license noreferrer\" href=\"https://www.freepik.com\"  title=\"Freepik\">Freepik</a> from <a target=\"_blank\" rel=\"license noreferrer\" href=\"https://www.flaticon.com/\" title=\"Flaticon\">Flaticon.com</a> | Powered by <a target=\"_blank\" rel=\"license noreferrer\" href=\"https://openweathermap.org/\" title=\"OpenWeatherMa.org\">OpenWeatherMap</a>| Created by <a target=\"_blank\" rel=\"author noreferrer\" href=\"https://github.com/bartekmnemo/weather-app\" title=\"https://github.com\">Bartosz Zięcina</a></div> \r\n        </footer>\r\n     );\r\n}\r\n \r\nexport default Footer;","import React, { Component } from 'react';\nimport Navigation from './Navigation';\nimport MainPanel from './MainPanel'\nimport Footer from './Footer';\nimport './App.css';\n\n// API from https://home.openweathermap.org\nconst ApiKey = \"c84b8f5c077147fb55d9a448295d1fe7\"\n\nclass App extends Component {\n  state = { \n    isloading: false,\n    firstLoad: true,\n    value: '',\n    countryID: '',\n    iconImage: '',\n    date: '',\n    timezone: '',\n    country: '',\n    city: '',\n    sunrise: '',\n    sunset: '', \n    temp: '',\n    feels_like: '',\n    temp_min: '',\n    temp_max: '',\n    humidity: '',\n    pressure: '', \n    wind_speed: '',\n    wind_deg: '',\n    weather_main: '',\n    weather_description: '',\n    visibility: '',\n    error: false,\n    errorId: '',\n    errorMessage: ''\n   }\n   componentDidMount = () => {\n    this.handleCityClick();\n  }\n\n  handleValueChange = e => {\n    if(e.target.type === 'text')\n    {\n      this.setState({\n        value: e.target.value,\n      })\n    } else if (e.target.type === 'select-one'){\n      this.setState({\n        countryID: e.target.value,\n      })\n    }\n   \n    \n  }\n\n  setToloading = () => {\n    this.setState({\n      isloading: true,\n      country: '',\n      city: ''\n    })\n  }\n\n  handleCityClick = e => {\n    let city = this.state.value\n\n    if(this.state.firstLoad) city='dubai'\n  \n    if(e !== undefined) \n    {\n      e.preventDefault()\n    }\n    if(city.length <= 2) return\n     this.setToloading();\n    //Fahrenheit: units=imperial\n    //Celsius: units=metric\n\n    \n\n    const API = `https://api.openweathermap.org/data/2.5/weather?q=${city},${this.state.countryID}&appid=${ApiKey}&units=metric`\n    fetch(API)\n    .then( response => {\n      if(response.status === 200) {\n        return response.json()\n      }else if (response.status === 404){\n        this.setState({\n          errorId: 1\n        })\n        throw Error(`Incorrect city name`)\n      }else if (response.status === 500){\n        this.setState({\n          errorId: 2\n        })\n        throw Error(`The request was not completed due to an internal error on the server side.`)\n        \n      }\n      \n      })\n    .then( data => {  \n      console.log(data)\n      const time = new Date().toLocaleTimeString()\n      const weatherIndex = data.weather.length - data.weather.length\n      this.setState( prevState => ({\n        isloading: false,\n        firstLoad: false,\n        value: '',\n        iconImage: `https://openweathermap.org/img/wn/${data.weather[weatherIndex].icon}@2x.png`,\n        date: time,\n        timezone: data.timezone,\n        country: data.sys.country,\n        city: data.name,\n        sunrise: data.sys.sunrise,\n        sunset: data.sys.sunset, \n        temp: data.main.temp,\n        feels_like: data.main.feels_like,\n        temp_min: data.main.temp_min,\n        temp_max: data.main.temp_max,\n        humidity: data.main.humidity,\n        pressure: data.main.pressure, \n        wind_speed: data.wind.speed,\n        wind_deg: data.wind.deg,\n        weather_main: data.weather[weatherIndex].main,\n        weather_description: data.weather[weatherIndex].description,\n        visibility: data.visibility,\n        error: false\n      }))\n    })\n    .catch (err => {\n      console.log(err.message)\n      this.setState({\n        error: true,\n        errorMessage: err,\n        isloading: false\n      })\n    })\n  }\n\n  render() { \n    return ( \n      <div className=\"app\">\n        <Navigation />\n        <MainPanel all={this.state} change={this.handleValueChange} click={this.handleCityClick}/>\n        <Footer/>\n      </div>\n     );\n  }\n}\n\n\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}